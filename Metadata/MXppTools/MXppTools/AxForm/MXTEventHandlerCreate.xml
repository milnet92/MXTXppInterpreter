<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MXTEventHandlerCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class MXTEventHandlerCreate extends FormRun
{

}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void close()
    {
        if (MXTXppEventHandlerTable)
        {
            MXTXppEventHandlerTable.HandlerSourceCode = MXTXppScriptTemplate::generateTemplateFromEventHandler(MXTXppEventHandlerTable);
            MXTXppEventHandlerTable.write();

            MenuFunction menuFunc = new MenuFunction(menuItemDisplayStr(MXTEventHandlerEdit), MenuItemType::Display);
            Args args = new Args();
            args.record(MXTXppEventHandlerTable);
            args.openMode(OpenMode::Edit);

            menuFunc.run(args);
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>MXTXppEventHandlerTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            MXTXppEventHandlerTable.insert();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        boolean validateWrite()
        {
            boolean ret;

            if (!element.closedOk())
            {
                return true;
            }

            return super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>research</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        /// <param name = "_retainPosition"></param>
        public void research(boolean _retainPosition = false)
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DisplayMethodName</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                super();

                if (MXTXppEventHandlerTable.DisplayMethodName)
                {
                    MXTXppEventHandlerTable.MethodName = MXTXppEventHandlerTable::displayNameToInternalEvent(MXTXppEventHandlerTable.DisplayMethodName);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ElementName</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                super();

                Identification_DisplayMethodName.enabled(MXTXppEventHandlerTable.ElementName != "");
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ElementType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                super();

                Identification_ElementName.enabled(MXTXppEventHandlerTable.ElementType != MXTXppEventElementType::None);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Identification_ElementName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void lookup()
        {
            MXTXppEventHandlerTable::performElementNameLookup(MXTXppEventHandlerTable.ElementType, this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Identification_DisplayMethodName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void lookup()
        {
            MXTXppEventHandlerTable::performMethodNameLookup(MXTXppEventHandlerTable.ElementType, MXTXppEventHandlerTable.ElementName, this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>MXTXppEventHandlerTable</Name>
			<Table>MXTXppEventHandlerTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivationDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Active</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayMethodName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ElementName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ElementType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HandlerSourceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MethodName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MXT:NewEventHandler</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Identification</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Identification_ElementType</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ElementType</DataField>
						<DataSource>MXTXppEventHandlerTable</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Identification_ElementName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ElementName</DataField>
						<DataSource>MXTXppEventHandlerTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Identification_DisplayMethodName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>DisplayMethodName</DataField>
						<DataSource>MXTXppEventHandlerTable</DataSource>
					</AxFormControl>
				</Controls>
				<DataGroup>Identification</DataGroup>
				<DataSource>MXTXppEventHandlerTable</DataSource>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
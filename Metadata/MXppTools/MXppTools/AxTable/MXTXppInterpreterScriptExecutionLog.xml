<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MXTXppInterpreterScriptExecutionLog</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MXTXppInterpreterScriptExecutionLog extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cleanLog</Name>
				<Source><![CDATA[
    public static void cleanLog()
    {
        MXTXppInterpreterScriptExecutionLog  executionLog;
        MXTXppInterpreterScriptExecutionLog  executionLogUpd;
        ;

        ttsbegin;

        executionLog.initValue();
        executionLog.SourceCode = '@MXT:ExecutionLogCleanOperation';
        executionLog.insert();

        delete_from executionLogUpd
            where executionLogUpd.RecId != executionLog.RecId;

        ttscommit;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.companyid = curExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUserInRole</Name>
				<Source><![CDATA[
    public static boolean isUserInRole(Description  _roleName)
    {
        boolean                 res;
        SecurityUserRole        securityUserRole;
        SecurityRole            securityRole;
        
        select firstonly RecId from securityUserRole
            where  securityUserRole.User    == curUserId()
            join RecId from securityRole
                where  securityRole.RecId == securityUserRole.SecurityRole &&
                       securityRole.AotName == _roleName;

        return securityUserRole.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSecurityRights</Name>
				<Source><![CDATA[
    public static boolean checkSecurityRights()
    {
        boolean res;
        if (isSystemAdministrator()) 
        {   
            //we are on the dev version, do not check the group
            if (isDeveloper())
            {
                res = true;
            }
            else
            {
                if (!MXTXppInterpreterScriptExecutionLog::isUserInRole(roleStr(MXTXppInterpreterRole)) )
                {
                    throw error(strFmt("@MXT:ExecutionRoleException",
                        curUserId(), roleStr(MXTXppInterpreterRole)));
                }
            }
        }
        else
        {
            throw error("@MXT:SysAdminExecutionException");
        }

        return res;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startLog</Name>
				<Source><![CDATA[
    public static MXTXppInterpreterScriptExecutionLog startLog(str _sourceCode, boolean  _emitGlobalTtsAbort)
    {
        MXTXppInterpreterScriptExecutionLog         scriptExecutionLog;

        MXTXppInterpreterScriptExecutionLog::checkSecurityRights();

        if (!(isSystemAdministrator() && isDeveloper() && MXTXppInterpreterParameters::find().DoNotLogOnDevEnv))
        {
            scriptExecutionLog = null;
            scriptExecutionLog.initValue();
            scriptExecutionLog.SourceCode         = _sourceCode;
            scriptExecutionLog.EmitGlobalTtsAbort = _emitGlobalTtsAbort;
            scriptExecutionLog.insert();
        }

        return scriptExecutionLog;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@MXT:ExecutionLog</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>CreatedBy</TitleField1>
	<TitleField2>CreatedDateTime</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS104287</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreatedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmitGlobalTtsAbort</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyId</Name>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceCode</Name>
			<ExtendedDataType>MXTSourceCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EmitGlobalTtsAbort</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@MXT:GlobalTtsAbort</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CreatedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>